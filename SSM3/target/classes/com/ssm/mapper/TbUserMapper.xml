<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.mapper.TbUserMapper">
  <resultMap id="BaseResultMap" type="com.ssm.beans.TbUser">
    <id column="UUID" jdbcType="VARCHAR" property="uuid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="UPASSWORD" jdbcType="VARCHAR" property="upassword" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="UCODE" jdbcType="VARCHAR" property="ucode" />
    <result column="STATE" jdbcType="DECIMAL" property="state" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    UUID, USERNAME, UPASSWORD, EMAIL, UCODE, STATE
  </sql>
  <select id="selectByExample" parameterType="com.ssm.beans.TbUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from TB_USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from TB_USER
    where UUID = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from TB_USER
    where UUID = #{uuid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ssm.beans.TbUserExample">
    delete from TB_USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ssm.beans.TbUser">
    insert into TB_USER (UUID, USERNAME, UPASSWORD, 
      EMAIL, UCODE, STATE
      )
    values (#{uuid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{upassword,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{ucode,jdbcType=VARCHAR}, #{state,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.beans.TbUser">
    insert into TB_USER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        UUID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="upassword != null">
        UPASSWORD,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="ucode != null">
        UCODE,
      </if>
      <if test="state != null">
        STATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="upassword != null">
        #{upassword,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="ucode != null">
        #{ucode,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ssm.beans.TbUserExample" resultType="java.lang.Long">
    select count(*) from TB_USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update TB_USER
    <set>
      <if test="record.uuid != null">
        UUID = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.upassword != null">
        UPASSWORD = #{record.upassword,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.ucode != null">
        UCODE = #{record.ucode,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        STATE = #{record.state,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update TB_USER
    set UUID = #{record.uuid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      UPASSWORD = #{record.upassword,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      UCODE = #{record.ucode,jdbcType=VARCHAR},
      STATE = #{record.state,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.beans.TbUser">
    update TB_USER
    <set>
      <if test="username != null">
        USERNAME = #{username,jdbcType=VARCHAR},
      </if>
      <if test="upassword != null">
        UPASSWORD = #{upassword,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="ucode != null">
        UCODE = #{ucode,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        STATE = #{state,jdbcType=DECIMAL},
      </if>
    </set>
    where UUID = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.beans.TbUser">
    update TB_USER
    set USERNAME = #{username,jdbcType=VARCHAR},
      UPASSWORD = #{upassword,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      UCODE = #{ucode,jdbcType=VARCHAR},
      STATE = #{state,jdbcType=DECIMAL}
    where UUID = #{uuid,jdbcType=VARCHAR}
  </update>
</mapper>