<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
  <display-name>Archetype Created Web Application</display-name>

  <!-- 加载spring容器 -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath*:/spring/applicationContext-*.xml</param-value>
  </context-param>



  <!--解决post中文乱码的过滤器-->
  <filter>
    <filter-name>CharacterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>CharacterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <!-- SpringMVC前端控制器 -->
  <servlet>
    <servlet-name>springmvc</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!-- contextConfigLocation配置springmvc加载的配置文件（配置处理器、映射器、适配器..）
    若不配置contextConfigLocation，默认加载的是/WEB-INF/servlet名称-servlet.xml（springmvc-servlet.xml）
    -->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath*:spring/springmvc.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>springmvc</servlet-name>
    <!--
        第一种：*.action，访问以.action结尾 由DispatcherServlet进行解析
        第一种：/，所有访问的地址都由DispatcherServlet进行解析，但是对于静态文件的解析需要配置不让DispatcherServlet进行解析
        使用此种方法可实现RESTful风格的url
        第三种：/*，这样配置不对，若使用，最终转发到jsp页面时，仍然会由DispatcherServlet解析jsp，并不能根据jsp找到handler，会报错
   -->
    <url-pattern>*.action</url-pattern>
  </servlet-mapping>

  <!-- SpringMVC前端控制器，restful -->
  <servlet>
    <servlet-name>springmvc_rest</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!-- contextConfigLocation配置springmvc加载的配置文件（配置处理器、映射器、适配器..）
    若不配置contextConfigLocation，默认加载的是/WEB-INF/servlet名称-servlet.xml（springmvc-servlet.xml）
    -->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath*:spring/springmvc.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>springmvc_rest</servlet-name>
    <!--
        第一种：*.action，访问以.action结尾 由DispatcherServlet进行解析
        第一种：/，所有访问的地址都由DispatcherServlet进行解析，但是对于静态文件的解析需要配置不让DispatcherServlet进行解析
        使用此种方法可实现RESTful风格的url
        第三种：/*，这样配置不对，若使用，最终转发到jsp页面时，仍然会由DispatcherServlet解析jsp，并不能根据jsp找到handler，会报错
   -->
    <url-pattern>/</url-pattern>
  </servlet-mapping>

</web-app>
