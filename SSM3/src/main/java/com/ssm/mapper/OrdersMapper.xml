<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.mapper.OrdersMapper">
  <resultMap id="BaseResultMap" type="com.ssm.beans.Orders">
    <id column="OOID" jdbcType="VARCHAR" property="ooid" />
    <result column="ORDERTIME" jdbcType="TIMESTAMP" property="ordertime" />
    <result column="TOTAL" jdbcType="DECIMAL" property="total" />
    <result column="STATE" jdbcType="DECIMAL" property="state" />
    <result column="UUID" jdbcType="VARCHAR" property="uuid" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    OOID, ORDERTIME, TOTAL, STATE, UUID, ADDRESS
  </sql>
  <select id="selectByExample" parameterType="com.ssm.beans.OrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ORDERS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ORDERS
    where OOID = #{ooid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from ORDERS
    where OOID = #{ooid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ssm.beans.OrdersExample">
    delete from ORDERS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ssm.beans.Orders">
    insert into ORDERS (OOID, ORDERTIME, TOTAL, 
      STATE, UUID, ADDRESS
      )
    values (#{ooid,jdbcType=VARCHAR}, #{ordertime,jdbcType=TIMESTAMP}, #{total,jdbcType=DECIMAL}, 
      #{state,jdbcType=DECIMAL}, #{uuid,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.beans.Orders">
    insert into ORDERS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ooid != null">
        OOID,
      </if>
      <if test="ordertime != null">
        ORDERTIME,
      </if>
      <if test="total != null">
        TOTAL,
      </if>
      <if test="state != null">
        STATE,
      </if>
      <if test="uuid != null">
        UUID,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ooid != null">
        #{ooid,jdbcType=VARCHAR},
      </if>
      <if test="ordertime != null">
        #{ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="total != null">
        #{total,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        #{state,jdbcType=DECIMAL},
      </if>
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ssm.beans.OrdersExample" resultType="java.lang.Long">
    select count(*) from ORDERS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ORDERS
    <set>
      <if test="record.ooid != null">
        OOID = #{record.ooid,jdbcType=VARCHAR},
      </if>
      <if test="record.ordertime != null">
        ORDERTIME = #{record.ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.total != null">
        TOTAL = #{record.total,jdbcType=DECIMAL},
      </if>
      <if test="record.state != null">
        STATE = #{record.state,jdbcType=DECIMAL},
      </if>
      <if test="record.uuid != null">
        UUID = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ORDERS
    set OOID = #{record.ooid,jdbcType=VARCHAR},
      ORDERTIME = #{record.ordertime,jdbcType=TIMESTAMP},
      TOTAL = #{record.total,jdbcType=DECIMAL},
      STATE = #{record.state,jdbcType=DECIMAL},
      UUID = #{record.uuid,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.beans.Orders">
    update ORDERS
    <set>
      <if test="ordertime != null">
        ORDERTIME = #{ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="total != null">
        TOTAL = #{total,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        STATE = #{state,jdbcType=DECIMAL},
      </if>
      <if test="uuid != null">
        UUID = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        ADDRESS = #{address,jdbcType=VARCHAR},
      </if>
    </set>
    where OOID = #{ooid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.beans.Orders">
    update ORDERS
    set ORDERTIME = #{ordertime,jdbcType=TIMESTAMP},
      TOTAL = #{total,jdbcType=DECIMAL},
      STATE = #{state,jdbcType=DECIMAL},
      UUID = #{uuid,jdbcType=VARCHAR},
      ADDRESS = #{address,jdbcType=VARCHAR}
    where OOID = #{ooid,jdbcType=VARCHAR}
  </update>
</mapper>